@model TrueJobs.WriteCV

@{
    ViewBag.Title = "Create";
}

<head>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <style>
        select {
            width: 100%;
        }
    </style>
    <link href="~/Content/css/AdminLTE.min.css" rel="stylesheet" />
    @*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background-image: linear-gradient(rgba(0, 142, 99, 0.1), rgba(0, 0, 0, 0.1)), url('../../Content/img_biz/1.jpg');
            background-size: cover;
            background-attachment: fixed;
        }

        h2 {
            color: black;
            text-align: center
        }

        a:hover {
            text-decoration: none;
        }
    </style>

</head>
<body>

    <main id="main" style="margin-top:100px">
        <div class="container">
            <div class="row">

                <div class="col-lg-2"></div>
                <div class="col-lg-8">

                @using (Html.BeginForm())
    {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>WriteCV</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
            @Html.LabelFor(model => model.User_ID, "User_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.PreviousWork, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.PreviousWork, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextAreaFor(model => model.PreviousWork, htmlAttributes: new { @class = "control-label col-lg-12" })
                        @Html.ValidationMessageFor(model => model.PreviousWork, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-lg-12" })
                        @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Studies, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Studies, htmlAttributes: new { @class = "control-label col-lg-12" })
                        @Html.ValidationMessageFor(model => model.Studies, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Languages, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Languages, htmlAttributes: new { @class = "control-label col-lg-12" })
                        @Html.ValidationMessageFor(model => model.Languages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-lg-12" })
                        @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
}
                </div>
                <div class="col-lg-2"></div>
            </div>
            </div>
</main>
                @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }

</body>